name: Test Archon Integration

on:
  workflow_dispatch:
    inputs:
      test_repo:
        description: 'Repository to test (format: org/repo)'
        required: true
        default: 'archon/demo-repo'
      pr_number:
        description: 'PR number to test'
        required: true
        default: '1'
      analysis_type:
        description: 'Analysis type (fast or deep)'
        required: true
        default: 'fast'
        type: choice
        options:
        - fast
        - deep

env:
  AWS_REGION: us-east-1

jobs:
  test-webhook:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Get API Gateway URL
      id: get-api-url
      run: |
        cd infra/
        terraform init -backend=false
        API_URL=$(terraform output -raw api_gateway_url)
        echo "api_url=$API_URL" >> $GITHUB_OUTPUT
        
    - name: Test webhook endpoint
      run: |
        echo "Testing webhook endpoint: ${{ steps.get-api-url.outputs.api_url }}"
        
        # Test health endpoint
        curl -f "${{ steps.get-api-url.outputs.api_url }}/health" || exit 1
        
        # Test webhook endpoint with mock payload
        curl -X POST "${{ steps.get-api-url.outputs.api_url }}/webhook" \
          -H "Content-Type: application/json" \
          -H "X-Hub-Signature-256: sha256=$(echo '{"test": "payload"}' | openssl dgst -sha256 -hmac "${{ secrets.GITHUB_WEBHOOK_SECRET }}" -binary | base64)" \
          -d '{"test": "payload"}' || echo "Webhook test failed (expected for mock payload)"
          
  test-pr-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Get API Gateway URL
      id: get-api-url
      run: |
        cd infra/
        terraform init -backend=false
        API_URL=$(terraform output -raw api_gateway_url)
        echo "api_url=$API_URL" >> $GITHUB_OUTPUT
        
    - name: Create test PR payload
      run: |
        cat > test-payload.json << EOF
        {
          "action": "opened",
          "repository": {
            "full_name": "${{ github.event.inputs.test_repo }}"
          },
          "pull_request": {
            "number": ${{ github.event.inputs.pr_number }},
            "head": {
              "sha": "abc123def456"
            },
            "title": "Test PR for Archon",
            "body": "This is a test PR to validate Archon functionality",
            "labels": ${{ github.event.inputs.analysis_type == 'deep' && '["deep-scan"]' || '[]' }},
            "changed_files": 5,
            "additions": 100,
            "deletions": 10
          }
        }
        EOF
        
    - name: Test PR analysis
      run: |
        echo "Testing PR analysis for ${{ github.event.inputs.test_repo }}#${{ github.event.inputs.pr_number }}"
        
        # Generate signature
        SIGNATURE=$(cat test-payload.json | openssl dgst -sha256 -hmac "${{ secrets.GITHUB_WEBHOOK_SECRET }}" -binary | base64)
        
        # Send webhook
        curl -X POST "${{ steps.get-api-url.outputs.api_url }}/webhook" \
          -H "Content-Type: application/json" \
          -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
          -d @test-payload.json
          
    - name: Check DynamoDB for run record
      run: |
        echo "Checking DynamoDB for run record..."
        aws dynamodb scan \
          --table-name archon-runs-dev \
          --filter-expression "repo = :repo AND pr_number = :pr" \
          --expression-attribute-values '{
            ":repo": {"S": "${{ github.event.inputs.test_repo }}"},
            ":pr": {"N": "${{ github.event.inputs.pr_number }}"}
          }' \
          --max-items 1
          
  test-tools:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest boto3 moto
        
    - name: Test tools with mocked AWS services
      run: |
        python -m pytest tests/test_tools_unit.py -v
        
    - name: Test webhook handler
      run: |
        python -m pytest tests/test_webhook_unit.py -v
        
    - name: Test phase 2 components
      run: |
        python -m pytest tests/test_phase2_unit.py -v
        
    - name: Test phase 3 components
      run: |
        python -m pytest tests/test_phase3_unit.py -v
